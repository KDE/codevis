// ct_lvtplg_basicpluginhooks.h                                         -*-C++-*-

// Copyright 2023 Codethink Ltd <codethink@codethink.co.uk>
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// This file is automatically generated. Do not modify it directly - Use the generator file instead.
#ifndef DIAGRAM_SERVER_CT_LVTPLG_BASICPLUGINHOOKS_H
#define DIAGRAM_SERVER_CT_LVTPLG_BASICPLUGINHOOKS_H

#ifdef _WIN32
#define _EXPORT_AS_C extern "C" __declspec(dllexport)
#else
#define _EXPORT_AS_C extern "C"
#endif

// Forward declarations of data types
struct PluginSetupHandler;
struct PluginContextMenuHandler;
struct PluginDockWidgetHandler;
struct PluginEntityReportHandler;
struct PluginPhysicalParserOnHeaderFoundHandler;
struct PluginLogicalParserOnCppCommentFoundHandler;
struct PluginParseCompletedHandler;

// Available plugin hooks
// This hook is called as soon as the application initializes, and should be used to setup plugin data structures.
typedef void (*hookSetupPlugin_f)(PluginSetupHandler *);
_EXPORT_AS_C void hookSetupPlugin(PluginSetupHandler *);

// This hook is called just before the application closes, and must be used to cleanup any resource the plugin acquired.
typedef void (*hookTeardownPlugin_f)(PluginSetupHandler *);
_EXPORT_AS_C void hookTeardownPlugin(PluginSetupHandler *);

// Hook to control the graphics view context menu.
typedef void (*hookGraphicsViewContextMenu_f)(PluginContextMenuHandler *);
_EXPORT_AS_C void hookGraphicsViewContextMenu(PluginContextMenuHandler *);

// Can be used to setup new dock widgets (See PluginDockWidgetHandler)
typedef void (*hookSetupDockWidget_f)(PluginDockWidgetHandler *);
_EXPORT_AS_C void hookSetupDockWidget(PluginDockWidgetHandler *);

// If implemented, will generate an action in the reports menu to create a HTML report.
typedef void (*hookSetupEntityReport_f)(PluginEntityReportHandler *);
_EXPORT_AS_C void hookSetupEntityReport(PluginEntityReportHandler *);

// Called every time a header is found in the physical parser.
typedef void (*hookPhysicalParserOnHeaderFound_f)(PluginPhysicalParserOnHeaderFoundHandler *);
_EXPORT_AS_C void hookPhysicalParserOnHeaderFound(PluginPhysicalParserOnHeaderFoundHandler *);

// Called every time a comment is found in the logical parser.
typedef void (*hookLogicalParserOnCppCommentFound_f)(PluginLogicalParserOnCppCommentFoundHandler *);
_EXPORT_AS_C void hookLogicalParserOnCppCommentFound(PluginLogicalParserOnCppCommentFoundHandler *);

// Called after the Physical and Logical (if enabled) parsing are done.
typedef void (*hookOnParseCompleted_f)(PluginParseCompletedHandler *);
_EXPORT_AS_C void hookOnParseCompleted(PluginParseCompletedHandler *);

#undef _EXPORT_AS_C

#endif