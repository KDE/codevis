#include <Qt>
#include <QFont>
#include <QApplication>
#include <QColor>

Preferences {
    Debug {
        bool enableSceneContextMenu = false
        bool enableDebugOutput = false
        bool storeDebugOutput = false
    }
    Document {
        QString lastDocument = ""
        bool useDependencyTypes = true
        bool useLakosianRules = true
        int autoSaveBackupIntervalMsecs = 1000
    }
    Window {
        GraphTab {
            bool showMinimap = false
            bool showLegend = false
            int classLimit = 2
            int relationLimit = 20
            int zoomLevel = 100
            int updateIntervalMsec = 500
        }
        GraphWindow {
            int dragModifier = Qt::SHIFT
            int panModifier = Qt::ALT
            int zoomModifier = Qt::CTRL
            int minimapSize = 10
            bool colorBlindMode = false
            bool useColorBlindFill = false
            QColor backgroundColor = QColor(Qt::white)
            QColor entityBackgroundColor = QColor(204, 229, 255)
            QColor selectedEntityBackgroundColor = QColor(204, 229, 255)
            bool enableGradientOnMainNode = true
            QColor edgeColor = QColor(Qt::black)
            QColor highlightEdgeColor = QColor(Qt::red)
            Qt::Corner lakosEntityNamePos = Qt::BottomLeftCorner
            bool showRedundantEdgesDefault = false
            bool hidePackagePrefixOnComponents = false
            bool invertHorizontalLevelizationLayout = false
            bool invertVerticalLevelizationLayout = false
            bool showLevelNumbers = true
        }
        Fonts {
            QFont pkgGroupFont = qApp->font()
            QFont pkgFont = qApp->font()
            QFont componentFont = qApp->font()
            QFont classFont = qApp->font()
            QFont structFont = qApp->font()
            QFont enumFont = qApp->font()
        }
        Tools {
            bool showText = true
        }
    }
    GraphLoadInfo{
        bool showIsARelation = true
        bool showUsesInTheImplementationRelation = true
        bool showUsesInTheInterfaceRelation = true
        bool showClients = true
        bool showProviders = false
        bool showExternalEdges = false
    }
    CodeExtractor {
        QString lastConfigureJson = ""
        QString lastSourceFolder = ""
        QString lastIgnorePattern = "*.t.cpp,*.m.cpp,moc_*.cpp,*standalone*,*thirdparty*"
    }
    CodeGeneration {
        QString lastOutputDir = ""
    }
}
